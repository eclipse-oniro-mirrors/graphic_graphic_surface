# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_surface/graphic_surface_config.gni")

module_out_path = "graphic_surface/surface"

group("unittest") {
  testonly = true

  deps = [
    ":native_window_buffer_test_st",
    ":native_window_test_st",
    ":surface_ipc_test_st",
    ":surface_ipc_with_dropframe_test_st",
    ":surface_ipc_with_invaild_pts_test_st",
    ":surface_ipc_with_pts_test_st",
  ]
}

## SystemTest native_window_buffer_test {{{
ohos_unittest("native_window_buffer_test_st") {
  module_out_path = module_out_path

  sources = [ "native_window_buffer_test.cpp" ]

  include_dirs = [ "$graphic_surface_root/surface/include" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "$graphic_surface_root/buffer_handle:buffer_handle",
    "$graphic_surface_root/surface:surface",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "cJSON:cjson_static",     
    "selinux_adapter:librestorecon"
  ]
}

## SystemTest native_window_buffer_test }}}

## SystemTest native_window_test {{{
ohos_unittest("native_window_test_st") {
  module_out_path = module_out_path

  sources = [ "native_window_test.cpp" ]

  include_dirs = [ "$graphic_surface_root/surface/include" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "$graphic_surface_root/buffer_handle:buffer_handle",
    "$graphic_surface_root/surface:surface",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]
}

## SystemTest native_window_test }}}

## SystemTest surface_ipc_test {{{
ohos_unittest("surface_ipc_test_st") {
  module_out_path = module_out_path

  sources = [ "surface_ipc_test.cpp" ]

  include_dirs = [ "$graphic_surface_root/surface/include" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
  ]

  deps = [ "$graphic_surface_root/surface:surface" ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "cJSON:cjson_static",     
    "selinux_adapter:librestorecon"
  ]
}

## SystemTest surface_ipc_test }}}

## SystemTest surface_ipc_with_pts_test_st {{{
ohos_unittest("surface_ipc_with_pts_test_st") {
  module_out_path = module_out_path

  sources = [ "surface_ipc_with_pts_test.cpp" ]

  include_dirs = [ "$graphic_surface_root/surface/include" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
  ]

  deps = [
    "$graphic_surface_root/surface:surface",
    "$graphic_surface_root/sync_fence:sync_fence",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "cJSON:cjson_static",     
    "selinux_adapter:librestorecon"
  ]
}

## SystemTest surface_ipc_with_pts_test_st }}}

## SystemTest surface_ipc_with_invaild_pts_test_st {{{
ohos_unittest("surface_ipc_with_invaild_pts_test_st") {
  module_out_path = module_out_path

  sources = [ "surface_ipc_with_invaild_pts_test.cpp" ]

  include_dirs = [ "$graphic_surface_root/surface/include" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
  ]

  deps = [
    "$graphic_surface_root/surface:surface",
    "$graphic_surface_root/sync_fence:sync_fence",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "cJSON:cjson_static",     
    "selinux_adapter:librestorecon"
  ]
}

## SystemTest surface_ipc_with_invaild_pts_test_st }}}

## SystemTest surface_ipc_with_dropframe_test_st {{{
ohos_unittest("surface_ipc_with_dropframe_test_st") {
  module_out_path = module_out_path

  sources = [ "surface_ipc_with_dropframe_test.cpp" ]

  include_dirs = [ "$graphic_surface_root/surface/include" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
  ]

  deps = [
    "$graphic_surface_root/surface:surface",
    "$graphic_surface_root/sync_fence:sync_fence",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "cJSON:cjson_static",     
    "selinux_adapter:librestorecon"
  ]
}
## SystemTest surface_ipc_with_dropframe_test_st }}}
